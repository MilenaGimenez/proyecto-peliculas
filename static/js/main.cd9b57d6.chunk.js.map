{"version":3,"sources":["hooks/useFetch.js","components/Loading/Loading.jsx","components/SliderMovies/SliderMovies.jsx","pages/home.jsx","utils/constants.js","pages/new-movies.jsx","pages/popular.jsx","pages/search.jsx","pages/movie.jsx","pages/error404.jsx","components/MenuTop/MenuTop.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","res","json","getData","Loading","className","size","Movie","props","movie","id","backdrop_path","title","overview","backdropPath","style","backgroundImage","to","type","SliderMovies","newMovies","results","autoplay","map","Home","NewMovies","Popular","Search","Error404","MenuTop","theme","mode","defaultSelectedKeys","lineHeight","Item","App","Header","Layout","Content","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd9b57d6.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const res = await fetch(url, options); \r\n                const json = await res.json();  \r\n                setResult(json);\r\n                setLoading(false);             \r\n            } catch(err){\r\n                setError(err);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        getData()\r\n    }, [url, options])\r\n    return {loading, result, error};\r\n};\r\n\r\nexport default useFetch;","import {Spin} from 'antd';\r\nimport './Loading.sass';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <Spin size=\"large\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import { Carousel, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../Loading';\r\n\r\nimport './SliderMovies.sass'\r\n\r\nconst SliderMovies = props => {\r\n    //Destructuraci√≥n de los props de newMovies\r\n    const { newMovies } = props;\r\n    if(newMovies.loading || !newMovies.result){\r\n        return <Loading />\r\n    }\r\n\r\n    //Destructuraci√≥n de los resultados de newMovies.result, de las pel√≠culas;\r\n    const { results } = newMovies.result;\r\n\r\n    return (\r\n        <Carousel autoplay className=\"slider-movies\">\r\n            {results.map(movie => ( \r\n                <Movie key={movie.id}\r\n                movie={movie}/>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nconst Movie = props => {\r\n    const {movie: {\r\n        id, \r\n        backdrop_path, \r\n        title,\r\n        overview \r\n    }} = props;\r\n\r\n    const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n    return (\r\n        <div \r\n            className=\"slider-movies__movie\"\r\n            style={{backgroundImage: `url('${backdropPath}')`}}\r\n        >\r\n            <div className=\"slider-movies__movie-info\">\r\n                <div>\r\n                    <h2>{title}</h2>\r\n                    <p>{overview}</p>\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button type=\"primary\">Ver m√°s</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SliderMovies;","import useFetch from '../hooks/useFetch';\r\n// import Loading from '../components/Loading';\r\nimport {URL_API, API_KEY} from '../utils/constants';\r\n\r\nimport SliderMovies from '../components/SliderMovies';\r\n\r\nconst Home = () => {\r\n\r\n    const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=es-ES&page=1`;\r\n    \r\n\r\n    const newMovies = useFetch(url);\r\n\r\n    // console.log(movies);\r\n\r\n    return(\r\n        <div>\r\n            <SliderMovies newMovies={newMovies}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","export const URL_API = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = '2f4194f1858d93a88c6d33e3c8a10702';","const NewMovies = () => {\r\n    return \"estamos en newmovies\"\r\n};\r\n\r\nexport default NewMovies;","const Popular = () => {\r\n    return \"estamos en popular\"\r\n};\r\n\r\nexport default Popular;","const Search = () => {\r\n    return \"estamos en search\"\r\n};\r\n\r\nexport default Search;","const Movie = () => {\r\n    return \"estamos en movie\"\r\n}\r\n\r\nexport default Movie;","const Error404 = () => {\r\n    return \"error 404\"\r\n};\r\n\r\nexport default Error404;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\n\r\nimport './MenuTop.sass'\r\n\r\nconst MenuTop = () => {\r\n    return (\r\n        <div className=\"menu-top\">\r\n            <div className=\"menu-top__logo\">\r\n                Logo üçø\r\n            </div>\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                style={{lineHeight: \"64px\"}}\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/new-movies\">New Movies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <Link to=\"/popular\">Popular</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <Link to=\"/search\">Buscador</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuTop;","import { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//Pages\nimport Home from './pages/home';\nimport NewMovies from './pages/new-movies';\nimport Popular from './pages/popular';\nimport Search from './pages/search';\nimport Movie from './pages/movie';\nimport Error404 from './pages/error404';\n\n//Components\nimport MenuTop from './components/MenuTop';\n\nconst App = () => {\n\n  const { Header, Content} = Layout;\n\n  return (\n    <Layout>\n      <Router>\n        <Header>\n          <MenuTop />\n        </Header>\n        <Content>\n          <Switch>\n            <Route path='/' exact={true} component={Home} />\n            <Route path='/new-movies' exact={true} component={NewMovies} />\n            <Route path='/popular' exact={true} component={Popular} />\n            <Route path='/search' exact={true} component={Search} />\n            <Route path='/movie:id' exact={true} component={Movie} />\n            <Route path='*' exact={true} component={Error404} />\n          </Switch>\n        </Content>\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}